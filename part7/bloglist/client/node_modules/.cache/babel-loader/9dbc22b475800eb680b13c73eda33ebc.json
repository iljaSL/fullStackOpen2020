{"ast":null,"code":"var _jsxFileName = \"/goinfre/ismelich/Projects/fullStackOpen/part7/bloglist/client/src/components/LoginForm.js\";\nimport React, { useState } from 'react';\nimport loginService from '../services/login';\nimport PropTypes from 'prop-types';\n\nconst LoginForm = ({\n  setUser,\n  setNotification,\n  setErrorMessage\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUsername('');\n      setPassword('');\n      setUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n    } catch (exception) {\n      setNotification('wrong username or password');\n      setErrorMessage('error');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"log in to the application\"), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Username: \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"username\",\n    type: \"text\",\n    value: username,\n    name: \"Username\",\n    onChange: ({\n      target\n    }) => setUsername(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    value: password,\n    name: \"Password\",\n    onChange: ({\n      target\n    }) => setPassword(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"login-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"login\")));\n};\n\nLoginForm.propTypes = {\n  setUser: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  setErrorMessage: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/goinfre/ismelich/Projects/fullStackOpen/part7/bloglist/client/src/components/LoginForm.js"],"names":["React","useState","loginService","PropTypes","LoginForm","setUser","setNotification","setErrorMessage","username","setUsername","password","setPassword","handleLogin","event","preventDefault","user","login","localStorage","setItem","JSON","stringify","exception","target","value","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,eAAX;AAA4BC,EAAAA;AAA5B,CAAD,KAAmD;AACnE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMW,WAAW,GAAG,MAAMC,KAAN,IAAe;AACjCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMb,YAAY,CAACc,KAAb,CAAmB;AACpCR,QAAAA,QADoC;AAEpCE,QAAAA;AAFoC,OAAnB,CAAnB;AAIAD,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAN,MAAAA,OAAO,CAACU,IAAD,CAAP;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA7B;AACD,KATD,CASE,OAAOM,SAAP,EAAkB;AAClBf,MAAAA,eAAe,CAAC,4BAAD,CAAf;AACAC,MAAAA,eAAe,CAAC,OAAD,CAAf;AACD;AACF,GAfD;;AAgBA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAM,IAAA,EAAE,EAAC,YAAT;AAAsB,IAAA,QAAQ,EAAEK,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEJ,QAHT;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAEc,MAAAA;AAAF,KAAD,KAAgBb,WAAW,CAACa,MAAM,CAACC,KAAR,CALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEb,QAHT;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAEY,MAAAA;AAAF,KAAD,KAAgBX,WAAW,CAACW,MAAM,CAACC,KAAR,CALvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,eAqBE;AAAQ,IAAA,EAAE,EAAC,cAAX;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArBF,CAFF,CADF;AA4BD,CAhDD;;AAkDAnB,SAAS,CAACoB,SAAV,GAAsB;AACpBnB,EAAAA,OAAO,EAAEF,SAAS,CAACsB,IAAV,CAAeC,UADJ;AAEpBpB,EAAAA,eAAe,EAAEH,SAAS,CAACsB,IAAV,CAAeC,UAFZ;AAGpBnB,EAAAA,eAAe,EAAEJ,SAAS,CAACsB,IAAV,CAAeC;AAHZ,CAAtB;AAMA,eAAetB,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport loginService from '../services/login';\nimport PropTypes from 'prop-types';\n\nconst LoginForm = ({ setUser, setNotification, setErrorMessage }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n      setUsername('');\n      setPassword('');\n      setUser(user);\n      localStorage.setItem('user', JSON.stringify(user));\n    } catch (exception) {\n      setNotification('wrong username or password');\n      setErrorMessage('error');\n    }\n  };\n  return (\n    <>\n      <h2>log in to the application</h2>\n      <form id='login-form' onSubmit={handleLogin}>\n        <div>\n          <label htmlFor='username'>Username: </label>\n          <input\n            id='username'\n            type='text'\n            value={username}\n            name='Username'\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor='password'>Password: </label>\n          <input\n            id='password'\n            type='password'\n            value={password}\n            name='Password'\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button id='login-button' type='submit'>login</button>\n      </form>\n    </>\n  );\n};\n\nLoginForm.propTypes = {\n  setUser: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  setErrorMessage: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}