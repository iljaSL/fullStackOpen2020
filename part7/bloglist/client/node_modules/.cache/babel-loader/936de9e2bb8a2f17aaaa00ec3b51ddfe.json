{"ast":null,"code":"var _jsxFileName = \"/goinfre/ismelich/Projects/fullStackOpen/part7/bloglist/client/src/components/Blogs.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './Blog';\nimport blogService from '../services/blogs';\nimport BlogForm from './BlogForm';\nimport Togglable from './Togglable';\n\nconst Blogs = ({\n  user,\n  setUser,\n  setNotification,\n  setErrorMessage\n}) => {\n  const [blogs, setBlogs] = useState([]);\n  const blogFormRef = useRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n\n  const hideBlogForm = () => {\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.clear();\n  };\n\n  const countLikes = async blog => {\n    try {\n      const updatedBlog = await blogService.updateBlogPost(blog.id, {\n        title: blog.title,\n        author: blog.author,\n        url: blog.url,\n        likes: blog.likes + 1\n      });\n      setBlogs(blogs.map(item => item.id === blog.id ? updatedBlog : item));\n    } catch (error) {\n      setNotification('Something went wrong!');\n      setErrorMessage('error');\n    }\n  };\n\n  const removeBlogPost = async blog => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n      try {\n        const status = await blogService.removeBlogPost(blog.id, user.token);\n\n        if (status === 204) {\n          setBlogs(blogs.filter(item => item.id !== blog.id));\n          setNotification(`Blog ${blog.title} by ${blog.author} removed`);\n          setErrorMessage('ok');\n        }\n      } catch (exception) {\n        setNotification(`${blog.title} could not be delete, something went wrong.`);\n        setErrorMessage('error');\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"blogs\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, user.name, \" logged in \", /*#__PURE__*/React.createElement(\"button\", {\n    id: \"logout-button\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }\n  }, \" logout \")), /*#__PURE__*/React.createElement(Togglable, {\n    label: \"Create new blog\",\n    ref: blogFormRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlogForm, {\n    setBlogs: setBlogs,\n    token: user.token,\n    setNotification: setNotification,\n    setErrorMessage: setErrorMessage,\n    hideBlogForm: hideBlogForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"blogs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, [].concat(blogs).sort((firstBlog, secondBlog) => secondBlog.likes - firstBlog.likes).map(blog => /*#__PURE__*/React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    username: user.username,\n    countLikes: countLikes,\n    removeBlogPost: removeBlogPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Blogs;","map":{"version":3,"sources":["/goinfre/ismelich/Projects/fullStackOpen/part7/bloglist/client/src/components/Blogs.js"],"names":["React","useState","useEffect","useRef","Blog","blogService","BlogForm","Togglable","Blogs","user","setUser","setNotification","setErrorMessage","blogs","setBlogs","blogFormRef","getAll","then","hideBlogForm","current","toggleVisibility","handleLogout","localStorage","clear","countLikes","blog","updatedBlog","updateBlogPost","id","title","author","url","likes","map","item","error","removeBlogPost","window","confirm","status","token","filter","exception","name","concat","sort","firstBlog","secondBlog","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Blog from './Blog';\nimport blogService from '../services/blogs';\nimport BlogForm from './BlogForm';\nimport Togglable from './Togglable';\n\nconst Blogs = ({ user, setUser, setNotification, setErrorMessage }) => {\n  const [blogs, setBlogs] = useState([]);\n  const blogFormRef = useRef();\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  const hideBlogForm = () => {\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    localStorage.clear();\n  };\n\n  const countLikes = async (blog) => {\n    try {\n      const updatedBlog = await blogService.updateBlogPost(blog.id, {\n        title: blog.title,\n        author: blog.author,\n        url: blog.url,\n        likes: blog.likes + 1,\n      });\n      setBlogs(blogs.map((item) => (item.id === blog.id ? updatedBlog : item)));\n    } catch (error) {\n      setNotification('Something went wrong!');\n      setErrorMessage('error');\n    }\n  };\n\n  const removeBlogPost = async (blog) => {\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\n      try {\n        const status = await blogService.removeBlogPost(blog.id, user.token);\n        if (status === 204) {\n          setBlogs(blogs.filter((item) => item.id !== blog.id));\n          setNotification(`Blog ${blog.title} by ${blog.author} removed`);\n          setErrorMessage('ok');\n        }\n      } catch (exception) {\n        setNotification(\n          `${blog.title} could not be delete, something went wrong.`\n        );\n        setErrorMessage('error');\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <p>\n        {user.name} logged in <button id='logout-button' onClick={handleLogout}> logout </button>\n      </p>\n      <Togglable label='Create new blog' ref={blogFormRef}>\n        <BlogForm\n          setBlogs={setBlogs}\n          token={user.token}\n          setNotification={setNotification}\n          setErrorMessage={setErrorMessage}\n          hideBlogForm={hideBlogForm}\n        />\n      </Togglable>\n      <div id='blogs'>\n        {[]\n          .concat(blogs)\n          .sort((firstBlog, secondBlog) => secondBlog.likes - firstBlog.likes)\n          .map((blog) => (\n            <Blog\n              key={blog.id}\n              blog={blog}\n              username={user.username}\n              countLikes={countLikes}\n              removeBlogPost={removeBlogPost}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Blogs;\n"]},"metadata":{},"sourceType":"module"}