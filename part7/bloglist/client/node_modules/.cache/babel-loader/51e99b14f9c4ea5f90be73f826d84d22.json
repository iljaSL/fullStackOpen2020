{"ast":null,"code":"var _jsxFileName = \"/goinfre/ismelich/Projects/fullStackOpen/part7/bloglist/client/src/components/BlogForm.js\";\nimport React, { useState } from 'react';\nimport blogService from '../services/blogs';\n\nconst BlogForm = ({\n  setBlogs,\n  token,\n  setNotification,\n  setErrorMessage,\n  hideBlogForm\n}) => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n\n  const createBlog = async event => {\n    event.preventDefault();\n\n    try {\n      const blog = await blogService.postBlog({\n        title,\n        author,\n        url\n      }, token);\n      setBlogs(blogs => blogs.concat(blog));\n      setNotification(`A new blog post '${title}' has been added by ${author}`);\n      setErrorMessage('ok');\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n      hideBlogForm();\n    } catch (error) {\n      setNotification('Blog post could not be added! Check if you filled all the formst out!');\n      setErrorMessage('error');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"create new\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: createBlog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"title:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"title\",\n    value: title,\n    name: \"Title\",\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"author:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"author\",\n    value: author,\n    name: \"Author\",\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"url:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"url\",\n    value: url,\n    name: \"URL\",\n    onChange: ({\n      target\n    }) => setUrl(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"create-blog-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"create\"))));\n};\n\nexport default BlogForm;","map":{"version":3,"sources":["/goinfre/ismelich/Projects/fullStackOpen/part7/bloglist/client/src/components/BlogForm.js"],"names":["React","useState","blogService","BlogForm","setBlogs","token","setNotification","setErrorMessage","hideBlogForm","title","setTitle","author","setAuthor","url","setUrl","createBlog","event","preventDefault","blog","postBlog","blogs","concat","error","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,QADgB;AAEhBC,EAAAA,KAFgB;AAGhBC,EAAAA,eAHgB;AAIhBC,EAAAA,eAJgB;AAKhBC,EAAAA;AALgB,CAAD,KAMX;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMc,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMhB,WAAW,CAACiB,QAAZ,CAAqB;AAAEV,QAAAA,KAAF;AAASE,QAAAA,MAAT;AAAiBE,QAAAA;AAAjB,OAArB,EAA6CR,KAA7C,CAAnB;AACAD,MAAAA,QAAQ,CAAEgB,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaH,IAAb,CAAZ,CAAR;AACAZ,MAAAA,eAAe,CAAE,oBAAmBG,KAAM,uBAAsBE,MAAO,EAAxD,CAAf;AACAJ,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAG,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,MAAAA,MAAM,CAAC,EAAD,CAAN;AACAN,MAAAA,YAAY;AACb,KATD,CASE,OAAOc,KAAP,EAAc;AACdhB,MAAAA,eAAe,CACb,uEADa,CAAf;AAGAC,MAAAA,eAAe,CAAC,OAAD,CAAf;AACD;AACF,GAjBD;;AAmBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,IAAA,QAAQ,EAAEQ,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,KAAK,EAAEN,KAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEc,MAAAA;AAAF,KAAD,KAAgBb,QAAQ,CAACa,MAAM,CAACC,KAAR,CAJpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,KAAK,EAAEb,MAFT;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEY,MAAAA;AAAF,KAAD,KAAgBX,SAAS,CAACW,MAAM,CAACC,KAAR,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,KAAK,EAAEX,GAFT;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEU,MAAAA;AAAF,KAAD,KAAgBT,MAAM,CAACS,MAAM,CAACC,KAAR,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAnBF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,oBAAX;AAAgC,IAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA5BF,CAFF,CADF;AAqCD,CAnED;;AAqEA,eAAerB,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport blogService from '../services/blogs';\n\nconst BlogForm = ({\n  setBlogs,\n  token,\n  setNotification,\n  setErrorMessage,\n  hideBlogForm,\n}) => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n\n  const createBlog = async (event) => {\n    event.preventDefault();\n    try {\n      const blog = await blogService.postBlog({ title, author, url }, token);\n      setBlogs((blogs) => blogs.concat(blog));\n      setNotification(`A new blog post '${title}' has been added by ${author}`);\n      setErrorMessage('ok');\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n      hideBlogForm();\n    } catch (error) {\n      setNotification(\n        'Blog post could not be added! Check if you filled all the formst out!'\n      );\n      setErrorMessage('error');\n    }\n  };\n\n  return (\n    <div>\n      <h2>create new</h2>\n      <form onSubmit={createBlog}>\n        <div>\n          title:\n          <input\n            id=\"title\"\n            value={title}\n            name='Title'\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author:\n          <input\n            id=\"author\"\n            value={author}\n            name='Author'\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url:\n          <input\n            id=\"url\"\n            value={url}\n            name='URL'\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <div>\n          <button id=\"create-blog-button\" type='submit'>create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default BlogForm;\n"]},"metadata":{},"sourceType":"module"}