{"ast":null,"code":"import loginService from '../services/login';\nimport { setNotification } from './notificationReducer';\n\nconst userReducer = (state = JSON.parse(localStorage.getItem('user')), action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.user;\n\n    default:\n      return state;\n  }\n};\n\nexport const setUser = user => ({\n  type: 'SET_USER',\n  user\n});\nexport const logInUser = user => {\n  return async dispatch => {\n    try {\n      const loggedInUser = await loginService.login(user);\n      dispatch(setUser(loggedInUser));\n      localStorage.setItem('user', JSON.stringify(loggedInUser));\n    } catch (error) {\n      dispatch(setNotification(error.response.data.error, 'error'));\n    }\n  };\n};\nexport default userReducer;","map":{"version":3,"sources":["/goinfre/ismelich/Projects/fullStackOpen/part7/bloglist/client/src/reducers/userReducer.js"],"names":["loginService","setNotification","userReducer","state","JSON","parse","localStorage","getItem","action","type","user","setUser","logInUser","dispatch","loggedInUser","login","setItem","stringify","error","response","data"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,SAASC,eAAT,QAAgC,uBAAhC;;AAEA,MAAMC,WAAW,GAAG,CACnBC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADW,EAEnBC,MAFmB,KAGf;AACJ,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,UAAL;AACC,aAAOD,MAAM,CAACE,IAAd;;AACD;AACC,aAAOP,KAAP;AAJF;AAMA,CAVD;;AAYA,OAAO,MAAMQ,OAAO,GAAID,IAAD,KAAW;AACjCD,EAAAA,IAAI,EAAE,UAD2B;AAEjCC,EAAAA;AAFiC,CAAX,CAAhB;AAKP,OAAO,MAAME,SAAS,GAAIF,IAAD,IAAU;AAClC,SAAO,MAAOG,QAAP,IAAoB;AAC1B,QAAI;AACH,YAAMC,YAAY,GAAG,MAAMd,YAAY,CAACe,KAAb,CAAmBL,IAAnB,CAA3B;AACAG,MAAAA,QAAQ,CAACF,OAAO,CAACG,YAAD,CAAR,CAAR;AACAR,MAAAA,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAeH,YAAf,CAA7B;AACA,KAJD,CAIE,OAAOI,KAAP,EAAc;AACfL,MAAAA,QAAQ,CAACZ,eAAe,CAACiB,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBF,KAArB,EAA4B,OAA5B,CAAhB,CAAR;AACA;AACD,GARD;AASA,CAVM;AAYP,eAAehB,WAAf","sourcesContent":["import loginService from '../services/login';\nimport { setNotification } from './notificationReducer';\n\nconst userReducer = (\n\tstate = JSON.parse(localStorage.getItem('user')),\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase 'SET_USER':\n\t\t\treturn action.user;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const setUser = (user) => ({\n\ttype: 'SET_USER',\n\tuser,\n});\n\nexport const logInUser = (user) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst loggedInUser = await loginService.login(user);\n\t\t\tdispatch(setUser(loggedInUser));\n\t\t\tlocalStorage.setItem('user', JSON.stringify(loggedInUser));\n\t\t} catch (error) {\n\t\t\tdispatch(setNotification(error.response.data.error, 'error'));\n\t\t}\n\t};\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}